{"ast":null,"code":"var _jsxFileName = \"/home/hercules/Documentos/projeto/frontend/src/formulario.js\";\nimport React from 'react';\nimport './index.css';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport { Button, Modal, Form, Input, List, Avatar, Table, Popconfirm } from 'antd';\nconst data = [];\nconst dados = [{\n  title: 'Ant Design Title 1'\n}, {\n  title: 'Ant Design Title 2'\n}, {\n  title: 'Ant Design Title 3'\n}, {\n  title: 'Ant Design Title 4'\n}];\nconst EditableContext = React.createContext();\n\nconst EditableRow = ({\n  form,\n  index,\n  ...props\n}) => React.createElement(EditableContext.Provider, {\n  value: form,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n}, React.createElement(\"tr\", Object.assign({}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n})));\n\nconst EditableFormRow = Form.create()(EditableRow);\n\nclass EditableCell extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      editing: false\n    };\n\n    this.toggleEdit = () => {\n      const editing = !this.state.editing;\n      this.setState({\n        editing\n      }, () => {\n        if (editing) {\n          this.input.focus();\n        }\n      });\n    };\n\n    this.save = e => {\n      const {\n        record,\n        handleSave\n      } = this.props;\n      this.form.validateFields((error, values) => {\n        if (error && error[e.currentTarget.id]) {\n          return;\n        }\n\n        this.toggleEdit();\n        handleSave({ ...record,\n          ...values\n        });\n      });\n    };\n\n    this.renderCell = form => {\n      this.form = form;\n      const {\n        children,\n        dataIndex,\n        record,\n        title\n      } = this.props;\n      const {\n        editing\n      } = this.state;\n      return editing ? React.createElement(Form.Item, {\n        style: {\n          margin: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, form.getFieldDecorator(dataIndex, {\n        rules: [{\n          required: true,\n          message: `${title} is required.`\n        }],\n        initialValue: record[dataIndex]\n      })(React.createElement(Input, {\n        ref: node => this.input = node,\n        onPressEnter: this.save,\n        onBlur: this.save,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }))) : React.createElement(\"div\", {\n        className: \"editable-cell-value-wrap\",\n        style: {\n          paddingRight: 24\n        },\n        onClick: this.toggleEdit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, children);\n    };\n  }\n\n  render() {\n    const {\n      editable,\n      dataIndex,\n      title,\n      record,\n      index,\n      handleSave,\n      children,\n      ...restProps\n    } = this.props;\n    return React.createElement(\"td\", Object.assign({}, restProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), editable ? React.createElement(EditableContext.Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, this.renderCell) : children);\n  }\n\n}\n\nconst CollectionCreateForm = Form.create({\n  name: 'form_in_modal'\n})(class extends React.Component {\n  render() {\n    const {\n      visible,\n      onCancel,\n      onCreate,\n      form\n    } = this.props;\n    const {\n      getFieldDecorator\n    } = form;\n    return React.createElement(Modal, {\n      visible: visible,\n      title: \"Cadastrar de cliente\",\n      okText: \"Cadastrar\",\n      cancelText: \"Cancelar\",\n      onCancel: onCancel,\n      onOk: onCreate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(Form, {\n      layout: \"vertical\",\n      labelCol: {\n        span: 5\n      },\n      wrapperCol: {\n        span: 12\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      label: \"Nome\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, getFieldDecorator('nome', {\n      rules: [{\n        required: true,\n        message: 'Por favor, insira os dados!'\n      }]\n    })(React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"Telefone\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, getFieldDecorator('telefone', {\n      rules: [{\n        required: true,\n        message: 'Por favor, insira os dados!'\n      }]\n    })(React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"E-mail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, getFieldDecorator('email', {\n      rules: [{\n        required: true,\n        message: 'Por favor, insira os dados!'\n      }]\n    })(React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    })))));\n  }\n\n});\n\nclass CollectionsPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      visible: false\n    };\n\n    this.showModal = () => {\n      this.setState({\n        visible: true\n      });\n    };\n\n    this.handleCancel = () => {\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.handleCreate = () => {\n      const {\n        form\n      } = this.formRef.props;\n      form.validateFields((err, values) => {\n        if (err) {\n          return;\n        }\n\n        data.push({\n          id: 1,\n          nome: values.telefone,\n          telefone: values.telefone,\n          Email: values.email\n        });\n        console.log('Received values of form: ', data);\n        form.resetFields();\n        this.setState({\n          visible: false\n        });\n      });\n    };\n\n    this.saveFormRef = formRef => {\n      this.formRef = formRef;\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"subTitulo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \"Agenda de contatos\"), React.createElement(Button, {\n      type: \"primary\",\n      className: \"mod\",\n      onClick: this.showModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"Cadastrar\"), React.createElement(CollectionCreateForm, {\n      wrappedComponentRef: this.saveFormRef,\n      visible: this.state.visible,\n      onCancel: this.handleCancel,\n      onCreate: this.handleCreate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }), React.createElement(List, {\n      itemLayout: \"horizontal\",\n      dataSource: dados,\n      renderItem: item => React.createElement(List.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(List.Item.Meta, {\n        avatar: React.createElement(Avatar, {\n          src: \"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206\n          },\n          __self: this\n        }),\n        title: React.createElement(\"a\", {\n          href: \"https://ant.design\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207\n          },\n          __self: this\n        }, item.title),\n        description: React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208\n          },\n          __self: this\n        }, dados[0].nome),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default CollectionsPage;","map":{"version":3,"sources":["/home/hercules/Documentos/projeto/frontend/src/formulario.js"],"names":["React","ReactDOM","Button","Modal","Form","Input","List","Avatar","Table","Popconfirm","data","dados","title","EditableContext","createContext","EditableRow","form","index","props","EditableFormRow","create","EditableCell","Component","state","editing","toggleEdit","setState","input","focus","save","e","record","handleSave","validateFields","error","values","currentTarget","id","renderCell","children","dataIndex","margin","getFieldDecorator","rules","required","message","initialValue","node","paddingRight","render","editable","restProps","CollectionCreateForm","name","visible","onCancel","onCreate","span","CollectionsPage","showModal","handleCancel","handleCreate","formRef","err","push","nome","telefone","Email","email","console","log","resetFields","saveFormRef","item"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './index.css';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\n\nimport { Button, Modal, Form, Input, List, Avatar, Table, Popconfirm } from 'antd';\n\nconst data = [];\nconst dados = [\n  {\n    title: 'Ant Design Title 1',\n  },\n  {\n    title: 'Ant Design Title 2',\n  },\n  {\n    title: 'Ant Design Title 3',\n  },\n  {\n    title: 'Ant Design Title 4',\n  },\n];\n\nconst EditableContext = React.createContext();\n\nconst EditableRow = ({ form, index, ...props }) => (\n  <EditableContext.Provider value={form}>\n    <tr {...props} />\n  </EditableContext.Provider>\n);\n\nconst EditableFormRow = Form.create()(EditableRow);\n\nclass EditableCell extends React.Component {\n  state = {\n    editing: false,\n  };\n\n  toggleEdit = () => {\n    const editing = !this.state.editing;\n    this.setState({ editing }, () => {\n      if (editing) {\n        this.input.focus();\n      }\n    });\n  };\n\n  save = e => {\n    const { record, handleSave } = this.props;\n    this.form.validateFields((error, values) => {\n      if (error && error[e.currentTarget.id]) {\n        return;\n      }\n      this.toggleEdit();\n      handleSave({ ...record, ...values });\n    });\n  };\n\n  renderCell = form => {\n    this.form = form;\n    const { children, dataIndex, record, title } = this.props;\n    const { editing } = this.state;\n    return editing ? (\n      <Form.Item style={{ margin: 0 }}>\n        {form.getFieldDecorator(dataIndex, {\n          rules: [\n            {\n              required: true,\n              message: `${title} is required.`,\n            },\n          ],\n          initialValue: record[dataIndex],\n        })(<Input ref={node => (this.input = node)} onPressEnter={this.save} onBlur={this.save} />)}\n      </Form.Item>\n    ) : (\n      <div\n        className=\"editable-cell-value-wrap\"\n        style={{ paddingRight: 24 }}\n        onClick={this.toggleEdit}\n      >\n        {children}\n      </div>\n    );\n  };\n\n  render() {\n    const {\n      editable,\n      dataIndex,\n      title,\n      record,\n      index,\n      handleSave,\n      children,\n      ...restProps\n    } = this.props;\n    return (\n      <td {...restProps}>\n        {editable ? (\n          <EditableContext.Consumer>{this.renderCell}</EditableContext.Consumer>\n        ) : (\n          children\n        )}\n      </td>\n    );\n  }\n}\n\nconst CollectionCreateForm = Form.create({ name: 'form_in_modal' })(\n\n  class extends React.Component {\n    render() {\n      const { visible, onCancel, onCreate, form } = this.props;\n      const { getFieldDecorator } = form;\n      return (\n        <Modal\n          visible={visible}\n          title=\"Cadastrar de cliente\"\n          okText=\"Cadastrar\"\n          cancelText=\"Cancelar\"\n          onCancel={onCancel}\n          onOk={onCreate}\n        >\n          <Form layout=\"vertical\" labelCol={{ span: 5 }} wrapperCol={{ span: 12 }}>\n            <Form.Item label=\"Nome\">\n              {getFieldDecorator('nome', {\n                rules: [{ required: true, message: 'Por favor, insira os dados!' }],\n              })(<Input />)}\n            </Form.Item>\n            <Form.Item label=\"Telefone\">\n              {getFieldDecorator('telefone', {\n                rules: [{ required: true, message: 'Por favor, insira os dados!' }],\n              })(<Input />)}\n            </Form.Item>\n            <Form.Item label=\"E-mail\">\n              {getFieldDecorator('email', {\n                rules: [{ required: true, message: 'Por favor, insira os dados!' }],\n              })(<Input />)}\n            </Form.Item>\n          </Form>\n        </Modal>\n      );\n    }\n  },\n);\n\nclass CollectionsPage extends React.Component {\n  state = {\n    visible: false,\n  };\n\n  showModal = () => {\n    this.setState({ visible: true });\n  };\n\n  handleCancel = () => {\n    this.setState({ visible: false });\n  };\n\n  handleCreate = () => {\n    const { form } = this.formRef.props;\n    form.validateFields((err, values) => {\n      if (err) {\n        return;\n      }\n\n      \n      data.push({\n        id: 1,\n        nome: values.telefone,\n        telefone: values.telefone,\n        Email: values.email,\n      });\n      console.log('Received values of form: ', data);\n      form.resetFields();\n      this.setState({ visible: false });\n    });\n  };\n\n  saveFormRef = formRef => {\n    this.formRef = formRef;\n  };\n\n  render() {\n    return (\n      <div>\n        <h1 className=\"subTitulo\" >Agenda de contatos</h1>\n        <Button type=\"primary\" className=\"mod\" onClick={this.showModal}>\n            Cadastrar\n        </Button>\n        <CollectionCreateForm\n          wrappedComponentRef={this.saveFormRef}\n          visible={this.state.visible}\n          onCancel={this.handleCancel}\n          onCreate={this.handleCreate}\n        />\n        <br />\n        <br />\n        \n        <List\n          itemLayout=\"horizontal\"\n          dataSource={dados}\n          renderItem={item => (\n            <List.Item>\n              <List.Item.Meta\n                avatar={<Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />}\n                title={<a href=\"https://ant.design\">{item.title}</a>}\n          description={<p>{dados[0].nome}</p>}\n              />\n            </List.Item>\n          )}\n        />\n      </div>\n    );\n  }\n}\nexport default CollectionsPage;"]},"metadata":{},"sourceType":"module"}